CHKRAM = 0000H ; 02D7H   Power-up, check RAM
SYNCHR = 0008H ; 2683H   Check BASIC program character
RDSLT  = 000CH ; 01B6H   Read RAM in any slot
CHRGTR = 0010H ; 2686H   Get next BASIC program character
WRSLT  = 0014H ; 01D1H   Write to RAM in any slot
OUTDO  = 0018H ; 1B45H   Output to current device
CALSLT = 001CH ; 0217H   Call routine in any slot
DCOMPR = 0020H ; 146AH   Compare register pairs HL and DE
ENASLT = 0024H ; 025EH   Enable any slot permanently
GETYPR = 0028H ; 2689H   Get BASIC operand type
CALLF  = 0030H ; 0205H   Call routine in any slot
KEYINT = 0038H ; 0C3CH   Interrupt handler, keyboard scan
INITIO = 003BH ; 049DH   Initialize I/O devices
INIFNK = 003EH ; 139DH   Initialize function key strings
DISSCR = 0041H ; 0577H   Disable screen
ENASCR = 0044H ; 0570H   Enable screen
WRTVDP = 0047H ; 057FH   Write to any VDP register
RDVRM  = 004AH ; 07D7H   Read byte from VRAM
WRTVRM = 004DH ; 07CDH   Write byte to VRAM
SETRD  = 0050H ; 07ECH   Set up VDP for read
SETWRT = 0053H ; 07DFH   Set up VDP for write
FILVRM = 0056H ; 0815H   Fill block of VRAM with data byte
LDIRMV = 0059H ; 070FH   Copy block to memory from VRAM
LDIRVM = 005CH ; 0744H   Copy block to VRAM, from memory
CHGMOD = 005FH ; 084FH   Change VDP mode
CHGCLR = 0062H ; 07F7H   Change VDP colours
NMI    = 0066H ; 1398H   Non Maskable Interrupt handler
CLRSPR = 0069H ; 06A8H   Clear all sprites
INITXT = 006CH ; 050EH   Initialize VDP to 40x24 Text Mode
INIT32 = 006FH ; 0538H   Initialize VDP to 32x24 Text Mode
INIGRP = 0072H ; 05D2H   Initialize VDP to Graphics Mode
INIMLT = 0075H ; 061FH   Initialize VDP to Multicolour Mode
SETTXT = 0078H ; 0594H   Set VDP to 40x24 Text Mode
SETT32 = 007BH ; 05B4H   Set VDP to 32x24 Text Mode
SETGRP = 007EH ; 0602H   Set VDP to Graphics Mode
SETMLT = 0081H ; 0659H   Set VDP to Multicolour Mode
CALPAT = 0084H ; 06E4H   Calculate address of sprite pattern
CALATR = 0087H ; 06F9H   Calculate address of sprite attribute
GSPSIZ = 008AH ; 0704H   Get sprite size
GRPPRT = 008DH ; 1510H   Print character on graphic screen
GICINI = 0090H ; 04BDH   Initialize PSG (GI Chip)
WRTPSG = 0093H ; 1102H   Write to any PSG register
RDPSG  = 0096H ; 110EH   Read from any PSG register
STRTMS = 0099H ; 11C4H   Start music dequeueing
CHSNS  = 009CH ; 0D6AH   Sense keyboard buffer for character
CHGET  = 009FH ; 10CBH   Get character from keyboard buffer (wait)
CHPUT  = 00A2H ; 08BCH   Screen character output
LPTOUT = 00A5H ; 085DH   Line printer character output
LPTSTT = 00A8H ; 0884H   Line printer status test
CNVCHR = 00ABH ; 089DH   Convert character with graphic header
PINLIN = 00AEH ; 23BFH   Get line from console (editor)
INLIN  = 00B1H ; 23D5H   Get line from console (editor)
QINLIN = 00B4H ; 23CCH   Display "?", get line from console (editor)
BREAKX = 00B7H ; 046FH   Check CTRL-STOP key directly
ISCNTC = 00BAH ; 03FBH   Check CRTL-STOP key
CKCNTC = 00BDH ; 10F9H   Check CTRL-STOP key
BEEP   = 00C0H ; 1113H   Go beep
CLS    = 00C3H ; 0848H   Clear screen
POSIT  = 00C6H ; 088EH   Set cursor position
FNKSB  = 00C9H ; 0B26H   Check if function key display on
ERAFNK = 00CCH ; 0B15H   Erase function key display
DSPFNK = 00CFH ; 0B2BH   Display function keys
TOTEXT = 00D2H ; 083BH   Return VDP to text mode
GTSTCK = 00D5H ; 11EEH   Get joystick status
GTTRIG = 00D8H ; 1253H   Get trigger status
GTPAD  = 00DBH ; 12ACH   Get touch pad status
GTPDL  = 00DEH ; 1273H   Get paddle status
TAPION = 00E1H ; 1A63H   Tape input ON
TAPIN  = 00E4H ; 1ABCH   Tape input
TAPIOF = 00E7H ; 19E9H   Tape input OFF
TAPOON = 00EAH ; 19F1H   Tape output ON
TAPOUT = 00EDH ; 1A19H   Tape output
TAPOOF = 00F0H ; 19DDH   Tape output OFF
STMOTR = 00F3H ; 1384H   Turn motor ON/OFF
LFTQ   = 00F6H ; 14EBH   Space left in music queue
PUTQ   = 00F9H ; 1492H   Put byte in music queue
RIGHTC = 00FCH ; 16C5H   Move current pixel physical address right
LEFTC  = 00FFH ; 16EEH   Move current pixel physical address left
UPC    = 0102H ; 175DH   Move current pixel physical address up
TUPC   = 0105H ; 173CH   Test then UPC if legal
DOWNC  = 0108H ; 172AH   Move current pixel physical address down
TDOWNC = 010BH ; 170AH   Test then DOWNC if legal
SCALXY = 010EH ; 1599H   Scale graphics coordinates
MAPXYC = 0111H ; 15DFH   Map graphic coordinates to physical address
FETCHC = 0114H ; 1639H   Fetch current pixel physical address
STOREC = 0117H ; 1640H   Store current pixel physical address
SETATR = 011AH ; 1676H   Set attribute byte
READC  = 011DH ; 1647H   Read attribute of current pixel
SETC   = 0120H ; 167EH   Set attribute of current pixel
NSETCX = 0123H ; 1809H   Set attribute of number of pixels
GTASPC = 0126H ; 18C7H   Get aspect ratio
PNTINI = 0129H ; 18CFH   Paint initialize
SCANR  = 012CH ; 18E4H   Scan pixels to right
SCANL  = 012FH ; 197AH   Scan pixels to left
CHGCAP = 0132H ; 0F3DH   Change Caps Lock LED
CHGSND = 0135H ; 0F7AH   Change Key Click sound output
RSLREG = 0138H ; 144CH   Read Primary Slot Register
WSLREG = 013BH ; 144FH   Write to Primary Slot Register
RDVDP  = 013EH ; 1449H   Read VDP Status Register
SNSMAT = 0141H ; 1452H   Read row of keyboard matrix
PHYDIO = 0144H ; 148AH   Disk, no action
FORMAT = 0147H ; 148EH   Disk, no action
ISFLIO = 014AH ; 145FH   Check for file I/O
OUTDLP = 014DH ; 1B63H   Formatted output to line printer
GETVCP = 0150H ; 1470H   Get music voice pointer
GETVC2 = 0153H ; 1474H   Get music voice pointer
KILBUF = 0156H ; 0468H   Clear keyboard buffer
CALBAS = 0159H ; 01FFH   Call to BASIC from any slot


; VARIABLES
; =========

RDPRIM = $0F380
WRPRIM = $0F385
CLPRIM = $0F38C
USRTAB = $0F39A
LINL40 = $0F3AE
LINL32 = $0F3AF
LINLEN = $0F3B0
CRTCNT = $0F3B1
CLMLST = $0F3B2
TXTNAM = $0F3B3
TXTCOL = $0F3B5
TXTCGP = $0F3B7
TXTATR = $0F3B9
TXTPAT = $0F3BB
T32NAM = $0F3BD
T32COL = $0F3BF
T32CGP = $0F3C1
T32ATR = $0F3C3
T32PAT = $0F3C5
GRPNAM = $0F3C7
GRPCOL = $0F3C9
GRPCGP = $0F3CB
GRPATR = $0F3CD
GRPPAT = $0F3CF
MLTNAM = $0F3D1
MLTCOL = $0F3D3
MLTCGP = $0F3D5
MLTATR = $0F3D7
MLTPAT = $0F3D9
CLIKSW = $0F3DB
CSRY = $0F3DC
CSRX = $0F3DD
CNSDFG = $0F3DE
RG0SAV = $0F3DF
RG1SAV = $0F3E0
RG2SAV = $0F3E1
RG3SAV = $0F3E2
RG4SAV = $0F3E3
RG5SAV = $0F3E4
RG6SAV = $0F3E5
RG7SAV = $0F3E6
STATFL = $0F3E7
TRGFLG = $0F3E8
FORCLR = $0F3E9
BAKCLR = $0F3EA
BDRCLR = $0F3EB
MAXUPD = $0F3EC
MINUPD = $0F3EF
ATRBYT = $0F3F2
QUEUES = $0F3F3
FRCNEW = $0F3F5
SCNCNT = $0F3F6
REPCNT = $0F3F7
PUTPNT = $0F3F8
GETPNT = $0F3FA
CS1200 = $0F3FC
CS2400 = $0F401
HEADER = $0F40A
ASPCT1 = $0F40B
ASPCT2 = $0F40D
ENDPRG = $0F40F
ERRFLG = $0F414
LPTPOS = $0F415
PRTFLG = $0F416
NTMSXP = $0F417
RAWPRT = $0F418
VLZADR = $0F419
VLZDA = $0F41B
CURLIN = $0F41C
KBFMIN = $0F41E
KBUF = $0F41F
BUFMIN = $0F55D
BUF = $0F55E
TTYPOS = $0F661
DIMFLG = $0F662
VALTYP = $0F663
DORES = $0F664
DONUM = $0F665
CONTXT = $0F666
CONSAV = $0F668
CONTYP = $0F669
CONLO = $0F66A
MEMSIZ = $0F672
STKTOP = $0F674
TXTTAB = $0F676
TEMPPT = $0F678
TEMPST = $0F67A
DSCTMP = $0F698
FRETOP = $0F69B
TEMP3 = $0F69D
TEMP8 = $0F69F
ENDFOR = $0F6A1
DATLIN = $0F6A3
SUBFLG = $0F6A5
FLGINP = $0F6A6
TEMP = $0F6A7
PTRFLG = $0F6A9
AUTFLG = $0F6AA
AUTLIN = $0F6AB
AUTINC = $0F6AD
SAVTXT = $0F6AF
SAVSTK = $0F6B1
ERRLIN = $0F6B3
DOT = $0F6B5
ERRTXT = $0F6B7
ONELIN = $0F6B9
ONEFLG = $0F6BB
TEMP2 = $0F6BC
OLDLIN = $0F6BE
OLDTXT = $0F6C0
VARTAB = $0F6C2
ARYTAB = $0F6C4
STREND = $0F6C6
DATPTR = $0F6C8
DEFTBL = $0F6CA
PRMSTK = $0F6E4
PRMLEN = $0F6E6
PARM1 = $0F6E8
PRMPRV = $0F74C
PRMLN2 = $0F74E
PARM2 = $0F750
PRMFLG = $0F7B4
ARYTA2 = $0F7B5
NOFUNS = $0F7B7
TEMP9 = $0F7B8
FUNACT = $0F7BA
SWPTMP = $0F7BC
TRCFLG = $0F7C4
FBUFFR = $0F7C5
DECTMP = $0F7F0
DECTM2 = $0F7F2
DECCNT = $0F7F4
DAC = $0F7F6
HOLD8 = $0F806
ARG = $0F847
RNDX = $0F857
MAXFIL = $0F85F
FILTAB = $0F860
NULBUF = $0F862
PTRFIL = $0F864
FILNAM = $0F866
FILNM2 = $0F871
NLONLY = $0F87C
SAVEND = $0F87D
FNKSTR = $0F87F
CGPNT = $0F91F
NAMBAS = $0F922
CGPBAS = $0F924
PATBAS = $0F926
ATRBAS = $0F928
CLOC = $0F92A
CMASK = $0F92C
MINDEL = $0F92D
MAXDEL = $0F92F
ASPECT = $0F931
CENCNT = $0F933
CLINEF = $0F935
CNPNTS = $0F936
CPLOTF = $0F938
CPCNT = $0F939
CPCNT8 = $0F93B
CRCSUM = $0F93D
CSTCNT = $0F93F
CSCLXY = $0F941
CSAVEA = $0F942
CSAVEM = $0F944
CXOFF = $0F945
CYOFF = $0F947
LOHMSK = $0F949
LOHDIR = $0F94A
LOHADR = $0F94B
LOHCNT = $0F94D
SKPCNT = $0F94F
MOVCNT = $0F951
PDIREC = $0F953
LFPROG = $0F954
RTPROG = $0F955
MCLTAB = $0F956
MCLFLG = $0F958
QUETAB = $0F959
QUEBAK = $0F971
VOICAQ = $0F975
VOICBQ = $0F9F5
VOICCQ = $0FA75
RS2IQ = $0FAF5
PRSCNT = $0FB35
SAVSP = $0FB36
VOICEN = $0FB38
SAVVOL = $0FB39
MCLLEN = $0FB3B
MCLPTR = $0FB3C
QUEUEN = $0FB3E
MUSICF = $0FB3F
PLYCNT = $0FB40
VCBA = $0FB41
VCBB = $0FB66
VCBC = $0FB8B
ENSTOP = $0FBB0
BASROM = $0FBB1
LINTTB = $0FBB2
FSTPOS = $0FBCA
CURSAV = $0FBCC
FNKSWI = $0FBCD
FNKFLG = $0FBCE
ONGSBF = $0FBD8
CLIKFL = $0FBD9
OLDKEY = $0FBDA
NEWKEY = $0FBE5
KEYBUF = $0FBF0
LINWRK = $0FC18
PATWRK = $0FC40
BOTTOM = $0FC48
HIMEM = $0FC4A
TRPTBL = $0FC4C
RTYCNT = $0FC9A
INTFLG = $0FC9B
PADY = $0FC9C
PADX = $0FC9D
JIFFY = $0FC9E
INTVAL = $0FCA0
INTCNT = $0FCA2
LOWLIM = $0FCA4
WINWID = $0FCA5
GRPHED = $0FCA6
ESCCNT = $0FCA7
INSFLG = $0FCA8
CSRSW = $0FCA9
CSTYLE = $0FCAA
CAPST = $0FCAB
KANAST = $0FCAC
KANAMD = $0FCAD
FLBMEM = $0FCAE
SCRMOD = $0FCAF
OLDSCR = $0FCB0
CASPRV = $0FCB1
BDRATR = $0FCB2
GXPOS = $0FCB3
GYPOS = $0FCB5
GRPACX = $0FCB7
GRPACY = $0FCB9
DRWFLG = $0FCBB
DRWSCL = $0FCBC
DRWANG = $0FCBD
RUNBNF = $0FCBE
SAVENT = $0FCBF
EXPTBL = $0FCC1
SLTTBL = $0FCC5
SLTATR = $0FCC9
SLTWRK = $0FD09
PROCNM = $0FD89
DEVICE = $0FD99
